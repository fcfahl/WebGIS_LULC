function display_Flickr (data){

    // console.log( "response: ", data ); // server response

    var ico = new L.Icon({
        iconUrl: 'https://s.yimg.com/pw/images/goodies/white-small-circle.png',
        shadowUrl: null,
        iconAnchor: [9,9],
        popupAnchor: [0,-10],
        iconSize: [15, 15],
    });

    var logo = "https://s.yimg.com/pw/images/goodies/white-flickr.png";

    $.each(data.photos.photo, function() {

        var url = 'https://www.flickr.com/photos/' + this.owner + '/' + this.id ;

        var img = '<img src=" ' +  logo + ' "><br/><font color="red">'+ this.title+ '<br/><a id="'+ this.id+'" title="'+ this.title+ '" rel="pano" href="'+ url+ '" target="_new"><img src="'+ this.url_s+'" alt="'+this.title+'" width="180"/></a><br/>&copy;&nbsp;<a href="'+url  + '" target="_new">'+ this.owner+'</a>'+ this.upload_date + '</font>';

        // console.log( "url: ", url ); // server response

        var popup = L.popup({
            maxWidth: 600,
            maxHeight: 800
        }).setContent( img);

        var marker = L.marker([this.latitude, this.longitude], {
            icon: ico
        }).addTo(featureGroup);
        marker.bindPopup(popup);
    });
}

function get_Flickr (pSearch, pNumber, map_width, map_height){
    var flickrKey = "78a6ce549b86483a335a3377a3765ef0";

    var flickrData = {
        "api_key": flickrKey,
        "method": "flickr.photos.search",
        "has_geo": 1,
        "extras": "geo,url_s",
        "text": pSearch,
        "perpage": pNumber,
        "page": 1,
        "format": "json",
        "nojsoncallback": 1,
    };

    $.ajax({
        url: "https://api.flickr.com/services/rest/",
        data: flickrData,
    }).done(function( response ) {
        display_Flickr(response);
    });

}

function display_Panoramio(data){
    // console.log( "panoramio: ", data ); // server response

    var ico = new L.Icon({
        iconUrl: 'http://www.panoramio.com/img/panoramio-marker.png',
        shadowUrl: null,
        iconAnchor: [9,9],
        popupAnchor: [0,-10],
        iconSize: [15, 15],
    });

    var logo = "http://www.panoramio.com/img/glass/components/logo_bar/panoramio.png";

    $.each(data.photos, function() {

        var img = '<img src=" ' +  logo + ' "><br/><font color="red">'+ this.photo_title+ '<br/><a id="'+ this.photo_id+'" title="'+ this.photo_title+ '" rel="pano" href="'+ this.photo_url+ '" target="_new"><img src="'+ this.photo_file_url+'" alt="'+this.photo_title+'" width="180"/></a><br/>&copy;&nbsp;<a href="'+this.owner_url+ '" target="_new">'+ this.owner_name+'</a>'+ this.upload_date + '</font>';

        var popup = L.popup({
            maxWidth: 600,
            maxHeight: 800
            })
            .setContent( img);

        var marker = L.marker([this.latitude, this.longitude], {icon: ico}).addTo(featureGroup);
        marker.bindPopup(popup);
    });
}

function get_Panoramio (pSearch, pNumber, map_width, map_height){

    var data = get_BBOX();
    // console.log( "panoData: ", data );

    if ( pSearch === "") {
        var pTag = "public";
    } else {
        var pTag = "public&tag="+ pSearch;
    }

    if ( pNumber === "") {
        var pN = "&from=0&to=50";
    } else {
        var pN = "&from=0&to=" + pNumber;
    }

    // create Panoraimo URL
    var panoURL = "http://www.panoramio.com/map/get_panoramas.php?set=" + pTag + pN + "&minx=" + data.minx + "&miny=" + data.maxx + "&maxx=" + data.miny + "&maxy=" + data.maxy + "&size=small&mapfilter=true&callback=?";
    console.log( "panoURL: ", panoURL ); // server response

    // get Photos
    $.ajax({
        url: panoURL,

        // The name of the callback parameter, as specified by the YQL service
        jsonp: "callback",

        // Tell jQuery we're expecting JSONP
        dataType: "jsonp",

        // Tell YQL what we want and that we want JSON
        data: {
            tag: pSearch,
            format: "json",
        },

        // Work with the response
        success: function(response) {
            display_Panoramio(response);
        }
    });

    // see example to be copied
    // view-source:http://techslides.com/demos/leaflet/leaflet-api-cache.html

}

function add_Photos (type, pSearch, pNumber, map_width, map_height) {

    // console.log("type: ", type );

    if ( type === "addFlickr") {
        var flickrData = get_Flickr (pSearch, pNumber, map_width, map_height);

    } else {
        var panoData =get_Panoramio (pSearch, pNumber, map_width, map_height);
        // console.log( "panoData: ", panoData ); // server response
        // console.log( panoData ); // server response

        // $.each(panoraimoData.photos, function() {
        //     var marker = L.marker([this.latitude, this.longitude]).addTo(featureGroup);
        //     marker.bindPopup("<b>"+this.photo_title+"</b><br><img src='" + this.photo_file_url + "'>");
        // });


        // var myOptions = {
        //   'width': 300,
        //   'height': 200
        // };
        // //
        // var data = new panoramio.PhotoRequest(panoraimoData);
        // console.log ("PhotoRequest: ", data)
        //
        // var wapiblock = document.getElementById('custom');
        // var widget = new panoramio.PhotoWidget(wapiblock, data, myOptions);
        // console.log("widget:", widget);

        // $.each(data, function() {
        //     // var marker = L.marker([this.latitude, this.longitude]).addTo(featureGroup);
        //     // marker.bindPopup("<b>"+this.title+"</b><br><img src='" + this.url_s + "'>");
        //
        //     console.log("myRequest:", this );
        //  });


        // var panoramio = new L.Panoramio({maxLoad: pNumber, maxTotal: 250});

        // map.addLayer(panoramio);
    };

};

    // get bbox of the visible map
    // http://stackoverflow.com/questions/22948096/get-the-bounding-box-of-the-visible-leaflet-map
    $(function() {
        map.on('dragend zoomend', function onDragEnd(){
            var map_width = map.getBounds().getEast() - map.getBounds().getWest();
            var map_height = map.getBounds().getNorth() - map.getBounds().getSouth();

            // console.log (
            // 'center:' + map.getCenter() +'\n'+
            // 'width:' + map_width +'\n'+
            // 'height:' + map_height +'\n'+
            // 'size in pixels:' + map.getSize());

            var pSearch = $('#photo_query').val();
            var pNumber= $('#photo_number').val();

        });
    });

    $(".btn-photo" ).on('change', function (event) {

        var layer = $(this).attr('value');     //  Get the ID fist to identify the event (does not work as the toggle layer function)
        var layerClicked = window[layer];

        var pSearch = $('#photo_query').val();
        var pNumber= $('#photo_number').val();

        var map_width = map.getBounds().getEast() - map.getBounds().getWest();
        var map_height = map.getBounds().getNorth() - map.getBounds().getSouth();

        // console.log("pSearch: ", pSearch,  " pNumber: ", pNumber);

        //
        // jsonLayer = new L.LayerJSON({
        //      url:'https://api.flickr.com/services/rest/?method=flickr.photos.search&api_key=78a6ce549b86483a335a3377a3765ef0&text=italia&has_geo=1&extras=geo,url_s&per_page=100&page=1&format=json&nojsoncallback=1',
        //      propertyItems: 'photos.photo',
        //      propertyLoc: ['latitude','longitude'],
        //      buildPopup: popupContent,
        // });
        //
        // map.addLayer(jsonLayer);

        // toggle icon
        // http://stackoverflow.com/questions/23266545/how-to-toggle-font-awesome-icon-on-click
        $(this).find('i').toggleClass('"" fa-check');

        //
        if($(layerClicked).prop('checked')) {
            // console.log(layer,': checked' );
            add_Photos  (layer, pSearch, pNumber, map_width, map_height);

        } else {
            console.log(layer,': unchecked' );
        }
    });


____



            $.ajax({
                url: url_Panoraimo,

                // The name of the callback parameter, as specified by the YQL service
                jsonp: "callback",

                // Tell jQuery we're expecting JSONP
                dataType: "jsonp",

                // Tell YQL what we want and that we want JSON
                data: {
                    tag: pSearch,
                    format: service_Photo.format
                },
                async: false,
                // Work with the response
                success: function(response) {
                    console.log(response);
                }
            });
