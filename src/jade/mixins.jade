//- VARIABLES

- var  layers =  []
- var  layers_ID =  []
- var  servers =  []
- var  atlas =  []

for value in locals.Layers
    - layers.push ( value.Name)
    - layers_ID.push ( value.ID)

for value in locals.Servers
    - servers.push (value.Server)

for value in locals.UrbanAtlas_06
    - atlas.push (value.Code)


//- MIXINS
mixin addPlugin(name, type)
    //- leaflet plugins
    - if (type == 'bower')
      - var folder = 'bower_components/' + name
    - else
      - var folder = name

    script(src=folder) 

mixin addCSS(name, type)
    //- leaflet plugins
    - if (type == 'bower')
      - var folder = 'bower_components/'  + name
    - else
      - var folder = name
    link(rel="stylesheet" type="text/css" href=folder)

mixin tabs_bootstrap(classLI,classA,name,tab,bool)
    - var idA = name + "-tab"
    - var ref = "#" + name

    li(class=classLI)
        a(class=classA href=ref role=roleA id=idA data-toggle="tab" aria-controls=name aria-expanded=bool)=tab

mixin legend_boot(section,sort,layers)

    - var index = 0

    for  ly in layers_ID
        - var id =  locals.Layers[ly].ID
        - var leg_ID = "leg_" + id
        - var opy_ID = "opy_" + id
        - var heading = "leg_" + id
        - var collapse = "leg_col_" + id
        - var ref_collapse = "#leg_col_" + id
        - var NM = locals.Layers[ly].Name
        - var ref = "img/"  +   id  + ".svg"
        - var legend = locals.Layers[ly].Legend

        if legend == "yes"

            div(id=leg_ID class="leg" role="tablist" aria-multiselectable="true")
                .panel.panel-default
                    .panel-heading.collapsed(role="tab" id=heading rel="#{index++}")
                        h3.panel-title
                            a(data-toggle="collapse" data-parent="#accordion" href=ref_collapse aria-expanded="true" aria-controls=ID class="accordion-toggle")=NM    

                    div(id=collapse class="panel-collapse collapse in" role="tabpanel" aria-labelledby=heading )
                        .opy
                            .opy_title Opacity:
                            input(id=opy_ID class="opy_slider slider" data-id=id type="range" min="0" max="1" step="0.1" value="1" autocomplete="off" onchange="update_Opacity(this);")

                            .leg-img
                                img(src=ref alt=NM)

mixin table_boot(section,sort,layers)

    - var index = 1

    for  ly in layers_ID
        - var id =  locals.Layers[ly].ID
        - var tbl_ID = "tbl_" + id
        - var heading = "tbl2_" + id
        - var collapse = "tbl_col_" + id
        - var ref_collapse = "#tbl_col_" + id
        - var NM = locals.Layers[ly].Name
        - var legend = locals.Layers[ly].Legend

        if legend == "yes"

            div(id=tbl_ID class="tbl" role="tablist" aria-multiselectable="true")
                .panel.panel-default
                    .panel-heading.collapsed(role="tab" id=heading rel="#{index++}")
                        h3.panel-title
                            a(data-toggle="collapse" data-parent="#accordion" href=ref_collapse aria-expanded="true" aria-controls=tbl_ID)=NM
                div(id=collapse class="panel-collapse collapse in" role="tabpanel" aria-labelledby=heading )
                    +mk_table(id)

mixin mk_table (ID)

    for  ly in layers_ID
        - var table =  locals.Layers[ly].ID
        - var table_ID =  "tbl_" +  locals.Layers[ly].ID
        - var name =  locals.Layers[ly].Name

        if ID == table
            table(id=table_ID class="table table-striped table-bordered table-hover table-sm" cellspacing="0" width="50%")
                tbody
                    for  val, key in locals.Layers[ly]
                        if key !== 'Type' && key !== 'Legend' && key !== 'Category_ID' && key !== 'Category'  && key !== 'Dataset'  && key !== 'ID'  && key !== 'Workspace'  && key !== 'Style' && key !== 'Data source'  && val !== '' 
                            tr(class="table_row")
                                td #{key}
                                td #{val}

mixin accorde(section,group)

  .group
    - var index = 0
    h3=section
    div(id=group)
        for  layer in layers_ID
            - var ID = locals.Layers[layer].ID
            - var NM =  locals.Layers[layer].Name
            - var cat =  locals.Layers[layer].Category
            if section == cat
              div(id=ID class='draggable')
                li
                  input(type="checkbox" value=ID class="boxlayer" checked='false' rel="#{index++}")
                  label(for=ID)
                    span=NM

        if group == 'WMS_external'
            +Capabilities
        
        if group == 'geotag'
            +Geotag        
            +photo_Modal

        if group == 'atlas'
            +Atlas

mixin Capabilities()
    .getCapabilities
        form(class="form-inline")
            div(class="form-group")
                label(class="sr-only" for="form_capabilities" WMS Get Capabilities)
                input(type="text", class="form-control form-control", id="wms_capability", placeholder="enter getcapabilities address", value="")
                //- input(type="text", class="form-control form-control", id="wms_capability", placeholder="enter getcapabilities address", value="http://wms.pcn.minambiente.it/ogc?map=/ms_ogc/WMS_v1.3/Vettoriali/Carta_ecopedologica.map&service=wms&request=getCapabilities&version=1.3.0")

            button(type="button" class="btn btn-primary btn-sm" data-toggle="modal" data-target="#modalWindow" id="wms_submit") Submit

            +wms_Modal

    .custom_Layers

mixin wms_Modal()
    .wmsModal
        div(class="modal fade"  id="modalWindow" tabindex="-1" role="dialog" aria-labelledby="wms" aria-hidden="true")
            div(class="modal-dialog" role="document")
                div(class="modal-content")
                    div(class="modal-header")
                        button(type="button" class="close" data-dismiss="modal" aria-label="Close")
                            span(aria-hidden="true") &times;
                        h2 Available WMS Layers
                    div(class="modal-body")
                        .wmsList
                            ul(class="list-group")
                            

                    div(class="modal-footer")
                        button(type="button" class="btn btn-secondary " id="wms_close" data-dismiss="modal") Close
                        button(type="button" class="btn btn-primary" id="wms_add"  data-dismiss="modal") Add Selected Layers

mixin Geotag()
    div(class="switch-buttons")
        +switch_button("Flickr", "btn_Flick") 
        +switch_button("Panoramio", "btn_Pano") 
        +switch_button("Geograph", "btn_Geog") 
        

    div(class="photo-control")
        div(class="page-buttons")
            div(class="photo-page-back")
                button(type="button" class="btn btn-secondary-outline btn-sm" id="bt-page-back")
                    i(class="fa fa-backward" aria-hidden="true")
            div(class="photo-page-text" id="page-number")
                spam Page 1
            div(class="photo-page-forw")
                button(type="button" class="btn btn-secondary-outline btn-sm" id="bt-page-forw")
                    i(class="fa fa-forward" aria-hidden="true")
            div(class="photo-settings")
                button(type="button" class="btn btn-secondary-outline btn-sm" data-toggle="modal" data-target="#modalPhoto" id="photo_submit")
                    i(class="fa fa-cogs" aria-hidden="true")
                            
mixin photo_Modal()
    .photo-Modal
        div(class="modal fade"  id="modalPhoto" tabindex="-1" role="dialog" aria-labelledby="geotag" aria-hidden="true")
            div(class="modal-dialog" role="document")
                div(class="modal-content")
                    div(class="modal-header")
                        button(type="button" class="close" data-dismiss="modal" aria-label="Close")
                            span(aria-hidden="true") &times;
                        h2 Photo Search Parameters
                    div(class="modal-body")
                        div(class="photoList")
                            form
                                .form-group.row
                                    label(class="col-sm-5 form-control-label" for="photo_query") Photo text*: 
                                    input(type="text" class="col-sm-6 form-control" id="photo_query" placeholder="free text search on title, description and tags" value="")
                                .form-group.row
                                    label(class="col-sm-5 form-control-label" for="photo_tag") Photo tag*:
                                    input(type="text" class="col-sm-6 form-control" id="photo_tag" placeholder="comma-delimited list of tags" value="")
                                .form-group.row
                                    label(class="col-sm-5 form-control-label" for="photo_number") Number of photos:
                                    input(type="text" class="col-sm-6 form-control" id="photo_number" placeholder="max=50" value="10")
                                .form-group.row
                                    label(class="col-sm-5 form-control-label" for="photo_year") Year of the photo*:
                                    input(type="text" class="col-sm-6 form-control" id="photo_year" placeholder="" value="")
                        
                    div(class="modal-footer")
                        .col-1
                            h4 * Search criteria not available for Panoramio
                        .col-2
                            button(type="button" class="btn btn-primary " id="photo_close" data-dismiss="modal") Close

mixin switch_button(name, ID)

    .switch-photo
        label.switch-light(onclick="" )
            input(class="switch-toogle switch-toogle-photo" type="checkbox" id=ID value=name) 
            strong #{name}

            span.well
                span Off
                span On
                a.btn.btn-primary

mixin Atlas()

    .atlas-select
        form(class="form-inline")
            div(class="form-group")
                label(for="atlas-select-cities" Add Layer: )
                input(type="text", class="form-control form-control-sm", id="atlas-cities", placeholder="click over the city location")
            button(type="button" class="btn btn-primary btn-sm" data-name="" data-id="" id="atlas_add") Add

    .atlas-layers
        .atlasSwitch
            .switch-buttons
                label.switch-light(onclick="" )
                    input(class="switch-toogle switch-toogle-wms" type="checkbox" id="btnService" value="WMS" ) 
                    strong ...........................

                    span.well
                        span WMS
                        span WFS
                        a.btn.btn-primary


    .atlas-template
        .atlas-group
            +modal_Atlas

mixin modal_Atlas ()    
    div(class="modal fade"  id="modal-template" tabindex="-1" role="dialog" aria-labelledby="wms" aria-hidden="true")
        div(class="modal-dialog" role="document")
            div(class="modal-content")
                div(class="modal-header")
                    button(type="button" class="close" data-dismiss="modal" aria-label="Close")
                        span(aria-hidden="true") &times;
                    h2(class="atlas-header") Urban Atlas: 
                div(class="modal-body")
    
                    .atlasList
                        +checkbox_Atlas

                div(class="modal-footer")
                    button(type="button" class="btn btn-primary " id="atlas_close" data-dismiss="modal") Close

mixin checkbox_Atlas ()

    for code in atlas
        - var class_Name = locals.UrbanAtlas_06[code].Class
        - var class_Color = locals.UrbanAtlas_06[code].Color

        div(class="class-List-Atlas")
            input(type="checkbox" class="atlasbox-class" checked='false' value=code data-name="toBeReplaced_city_name" data-color=class_Color data-type="WMS")
            label(for=ID)
                span #{class_Name}
